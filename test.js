const value =
  'FGDNCDNFFABAOEDODOAMAALPDBPKBKPDMLNCKKBHDAAANGFFHEBBAAMDOOFIDPMHEAJFHFPDJKIICHJMMJMPAJDMJMKEONFFNGMEAANKBHCFAABBNOJIAJHHFFBAOIAFHGIDMENKIDNHAABCIPLGHHMPJADAFMDKAFPMNABBACGHAAOFIDLCFGBIGOJIHFBOIGPAMCCAFABAJPFOHHDMMEFACFIGMCLDIIEFHHFOGACAFMBKGMNPKIADGDBDONMFIPMJNOMIBHGFKIEOHFICAACJKOMIAABHHEOMMEPPOCPHMEJHIJPEDDEDPOANKIDKOCHFHFLMDKFIFGINHIMKKIBCAAPAOIPHGDLDNABGCCAHMEIFIKKOAJBGIHCFOIKKCGCGAAPFJKDIDDAMAEIKFGKBGMKCKIENONGPAAKCFNHAHFFNHCEDFGFKCAOJKIDCFPFBFAFBBNEACHEHIDFCNOJHMOONMECOEOMODHHNKBPMAAAMAMMFNGAAAEEOCHBAJLDCNOAANNLAPFJEAPDMAALEIHMFAAJNPCGMMEHNJCGHHHEDADKEAJAFHADAMECNNMDPDPMBLNPAKCOFACPKNOKNAOAIAJPAJCCIJKIJOALHCICDKPEMJKLIAFGHAABOEJDIDHIMCBEMAAKMOELIAADMAEDOCHJNCFGOOIAMBDNHKIHMANGPCHJGLNGAMCHAKMLKMCILOKPIDDGKHBMFKIBKJFGAMEDHIALKAJACBMCCNAFKAOAAOICIGFJGMCKAAJEICHFKGAOAPOKNAEJKNACPKDCDAJHAMMGKAAHJJNFGOEABKMDIGPBHKAPANGMKHDGPOOCODNEONAODIIMBAAAFGHKFKIAOPGPCNAKOCOMNFAADIEDMCHKFFHLHAACOAEPAFAMBDNEANOIAEOHACHIBCAFAKIMMAJNCDDFPGCPHKIENALOJFABCNOJIAJPNAHOBOIFHEOOIPCJAIDCPAJDKCMIEDPJOAHGHCHKNEDIDAJGNIEAFNONOAMBCONOOOAGNNONGBAIACKGOFOEIKIOHKMJCCHFHIGIEJKELJALANGDKJGANOICNIFCGAJKAGIDOAJGBNMLEDDAFOPLHDPHBHMJCAAFOENDGFGHGCNMAEOHMAEKPIEBBNMDEDPIAPKJKMEHCMHMFOOFDPIHFOICCNKFCOIFDIMNEMCPFMANAOIPKAELFJAFKCCADAAKJAFACKIMHCOPNAANAAGPKJACIMJGAPOKAIJKPDPGMLMKEKCBKJBIENOMICMKEHFKEGPHJKIDPPNNOAAHFELJPFMEJGCAHKIFMOBNAKKCNBKCIAAFOIBIADPJNHNBAKCGOJHNCAALADFCNMCFAFOACONEMNAPANAHHIFIPAAHPCCMKOOAKPJGBMECMOOCNFGPDBEPBOIGHEAAJMENEDHPMAADEPNHGCKIHINNFAAAPNEEBDPBKFANLKIGHPABJMCPHACHLIEFLGKPIAJKACHHDMCLODNAADHMMENPBHHENPAEAFMPMEOFCDHJMHMEECHFMDBHCKINHFABJAJPDIAODMCDGGAPAKIHKFBPINAFOIFDGMCCHODHENOAEAABANAIOFHKAKIBOKMBCCHJHIBNCCHKAEMOCAAPKKCFDKICEAAAANOIKJNPEMEOFBKMCOOOACOBOAAPDNEHBOIEMACHIFGHMKMICKIPNPGMIEBFBCDCPHFODFBJGGEFOEFHBAAJOCFMHMEMIHDNHAAKMFMBNMEPNDPMCEBNHEEKFDJCCNAHANGFMAAAJDDDCGCJHKIFNIODAFAFOMOJIAJEKMBHAAJNLGNCAHFAFPMOHFMEIFKNKAAEDAGAAOICLIAKAOIKAHOHEMECNKHIFMCBCFPOJKIMJPDAPONFHEPCAOIOMBNPOMCFMHEMPOOMMJNHOAABCAOPPEJIECFPMMCPAAKNLMEHBKOBNDDHAIGEIKKHHPNCAAJBKPIEGMCBCMAAACHPDGAHANAFKJEMOOOOFECAFMEDMEDLPMEGICCLIKIGFIMKCAADMIANNHFPNJNNAFGOOPKAFAGJGEADADPEHEOOCKCBKAAJAJALMEABPHFNEOKHIDPAMHBEFAANMHNGGNOJFADGEKKJBDABANAGNONBNAAMIPMEEFAFNIGEIMCEDPCBHOOEKHIHOCIFAKANAHFDAMECCAAHCJDFJJKPBOAMLCHOKEMKEDHJEHIOOAAHGJHAFAAEFCPNHKICCBHBFKICMHHOMOIOLNKFKOIJCAJGBMEKLENAOMCMAAHCDDPAKLFDMKKFNABKCKIGJBMJCAADFABDIAJNLINJAONJNEDNAHHMHCMPCAANMIBPONOCDGEDOPCAKCIHNAAMDPNFADPPMPECMKINNONHOAAFDCMEEMECGFKBCOIBMHEJBKIJAPHIFFGPDOPKHKKGJPKHIAAIOEBLOJPGDPNFAKCEDBLAKMCMMHCPKOIPEADJPJADBFBIKAANJPPDGMEDILKHCAANDOHPMMENBGHPFKIONHDCBALIECAPANGJCIKEDHHCBAODNMEMKAGBADDDKPNGADPBNNKPBMCGCMKAIDPFFGCICKINNBDFDAAGFGGHCOIAAGHBFKIKFHCEHKICEKAJAFNAHGKHNNAFEHCNHMEKFMBHIAJGPNHCFOIAFIPOEMCMFJAAAIEHKFCDINACHKFMGMCMHCHAAMEILGEDOAAFMHKJDAADOKFINFGMDCHGPEBKFNMDCMEPPAJGIEJGDIHHFMEJAAOIEFAHOPANANAFNAKMLDHAHGMFEFGDADANJMEPGLMNCFCDDBOECAJCANOPNKIFECKPONAKKAAGJAAHMEJEIKIHPHCCHFGBMAFFPMEFKBOHIAJJAIPJPCHHKMKCICKNKJLKDMEEHNMJEEOHEHAMFKILAKHPHAAKIODMHDHFNNKJIFGGOJKONKINANNEOAADAPCKFKIOHECHHFGCDBMBJNAFINAMJFNEEAECJCHADDCKCAADNKCMMAACAHNEAFAFKGOBAMEGGIOGNOOIFEFMCONPEMFNAAAOMFOGOAAFDBFENMCBOHAIFCDCKFJKAOFLMIFIECHOKEMOCAADKMNABKKJNDAAANOBFFJCBOODALABADPCHCFGNOIEPGDKPMEEKNKFFAAJADANJMEPOIBLMDDBGMACAKIAKAIJMNGFIINFAONLAFEJCCHJPEMFEALJHJHKBAADMFIBEFMGAHFFCKIJDDKPKNACCOMNBDPCMNMACAAJOECLPFGADONGAEOBMACHFIEGKLMMEDPDAGFFKMCGFIKEIMCEFAINGDPAKBEBBKILAICFCAAFALFHAOICKEGMHPCBIDOBICCCMADNIHFHMHKCICHJAEFDNMCBBHADAOIEMJLIHNAJEABGNCHDAAIILHFBMEKEIFGNACCCMOOGPIAMAHMJKJEKPFGEKGMLCNABAFEBCKIICBNGOOIFHENCKKIIOMKFKAAOMAAKPCKHPPFOMHFHACENGIEFJOMNEONCMEOJEOIDMDHMFFGBIAMGENACMGAKJAANAJGPGKICHLCMHCCFAJCDKCKOABNCAFGBEINABAJLMDDLHAAEKAOAPMEMKBOCIDDOAJMCCAAMACFHAOIAAHIAKAAKJGCBKOICHIHOAKKOINOINKILOIAJFDPBDONIACHPOJCAMAACOLFBNMCIACJMFOOFMKAPANABKAPIBOOIEMKFKMEKAANPAMEJFODAEMENAECFDHHFHAAOAHFBMNHJCKIAGAOBICHCOPDOIFAONOOPIAAODJLIAMEPMNKFCMECAFNHEAAHLMEPBOIPHCIGCKIBBNDKDAAIMAEFBFGHODOMIHHCNGOKCCKPKJEJBDPFNECAPMCPADOKEAACMCMDGNAPPJFAAAABKEJEADPBKOMDCOIBMEJJPFMCFBAMJAJCMINDPCHNLKHPHAAGOHMPEOOKJIFEGMCMHAOBPOIBPKDMPOIAAABNFFABDMAAANOPNIOEAFGNINEGBAJFOFPJPAAJMHDAHEBFHGKNNHFNNGAAAKIGFELPMKIIHJCPHKINIPKPJKIDJLHAHAAEDJEKAOIPMEHCFKIFAJGKIEBIAMAOAMEAABNKACHPOLNJAHFNEKKMFOFBFOCNDAAHBGEDPDDACOAEABKCNADFBNAAJDACAEJFAPCKPOIBLIAJAHFAJCCGMAAPODMEEDPFMIJNFFGEKPMCCKIBKBIAKMCFNMDPPEBCEHJMAMEEFOHEHAAHCAMGHIEALPFFMHFJAOJMDHHMBHFEMHFGOACCFNGAOLNHOMCIAACOPMEEFDMECOEDAALFGOFNOOLAAPONAOIOBOOLNCDBPMCCEPCAFMEMCJFFGNAHDKKEBAAAILICEMEGKACCHOIJKODFPFMCAHMJFHHOIFNMAAJLCENBADPFHCHHFNABMJEOOAALIKFEMAJFAHFOACCMBEANANAMCBGBFFGGGGAAJKINMBHFPMBILJMCBMBGM';

const value1 = 'HLODMEALFDNHBMGCBHFHMBCPHMNBEOHM';
const value2 = 'BLAHMBKPIMFBCDEMBPAHMBGDMMFBMBIM';

const availableIndexes = [
  0, 4, 5, 9, 11, 12, 13, 15, 16, 20, 21, 25, 27, 28, 29, 31,
];

const groupByNumber = (str, number) => {
  const length = str.length / number;
  const arr = [];

  for (let i = 0; i < length; i++) {
    arr[i] = str.slice(i * number, i * number + number);
  }

  return arr;
};

const cutString = (arr) =>
  arr.map((str) =>
    str
      .split('')
      .filter((v, idx) => availableIndexes.includes(idx))
      .join(''),
  );

const shift = (arr) =>
  arr.map((str) => {
    let _s = `${str[6]}${str[5]}${str[4]}${str[3]}${str[2]}${str[1]}${str[0]}${str[7]}${str[14]}${str[13]}${str[12]}${str[11]}${str[10]}${str[9]}${str[8]}${str[15]}`;

    return _s;
  });

const replace = (arr) => {
  const _arr = arr.map((str) => {
    const groupBy2 = groupByNumber(str, 2);

    const replaced = groupBy2.map((str) => {
      let _str = str;

      _str = _str.replace(/BM/g, '*');
      _str = _str.replace(/AA/g, ' ');
      _str = _str.replace(/MB/g, 'C');
      _str = _str.replace(/CM/g, 'с');
      _str = _str.replace(/HD/g, 'м');
      _str = _str.replace(/EM/g, 'е');
      _str = _str.replace(/HC/g, 'р');
      _str = _str.replace(/OE/g, 'ш');
      _str = _str.replace(/DC/g, '1');

      _str = _str.replace(/ON/g, 'к');
      _str = _str.replace(/IO/g, 'и');
      _str = _str.replace(/GN/g, '.');
      _str = _str.replace(/GF/g, 'т');
      _str = _str.replace(/PD/g, 'л');
      _str = _str.replace(/DD/g, 'г');
      _str = _str.replace(/AL/g, '8');
      _str = _str.replace(/BE/g, 'я');
      _str = _str.replace(/IK/g, 'о');
      _str = _str.replace(/HC/g, 'р');
      _str = _str.replace(/KB/g, '4');
      _str = _str.replace(/AF/g, 'з');
      _str = _str.replace(/OO/g, 'у');
      _str = _str.replace(/AN/g, 'а');
      _str = _str.replace(/HD/g, 'м');
      _str = _str.replace(/HH/g, 'п');
      _str = _str.replace(/OE/g, 'ш');
      _str = _str.replace(/JA/g, 'н');
      _str = _str.replace(/CP/g, 'ц');
      _str = _str.replace(/FH/g, 'в');
      _str = _str.replace(/EI/g, 'й');
      _str = _str.replace(/NF/g, 'ь');
      _str = _str.replace(/NB/g, 'ж');
      _str = _str.replace(/NO/g, 'д');
      _str = _str.replace(/PJ/g, 'ю');
      _str = _str.replace(/CK/g, 'ч');
      _str = _str.replace(/KC/g, 'х');
      _str = _str.replace(/KJ/g, 'К');
      _str = _str.replace(/HF/g, 'Н');
      _str = _str.replace(/HN/g, 'Б');
      _str = _str.replace(/PG/g, 'А');
      _str = _str.replace(/EO/g, 'В');
      _str = _str.replace(/JE/g, ',');
      _str = _str.replace(/KK/g, 'б');
      _str = _str.replace(/GH/g, '7');
      _str = _str.replace(/MB/g, 'С');
      _str = _str.replace(/MF/g, 'ы');
      _str = _str.replace(/JD/g, 'Р');
      _str = _str.replace(/LJ/g, 'Ч');
      _str = _str.replace(/CC/g, 'ф');
      _str = _str.replace(/JF/g, 'Э');
      _str = _str.replace(/FC/g, 'Ш');
      _str = _str.replace(/LA/g, 'П');
      _str = _str.replace(/HI/g, 'э');
      _str = _str.replace(/BF/g, '6');
      _str = _str.replace(/EG/g, '-');
      _str = _str.replace(/FO/g, '9');
      _str = _str.replace(/GA/g, '3');
      _str = _str.replace(/PH/g, '5');
      _str = _str.replace(/MK/g, 'Ю');
      _str = _str.replace(/KO/g, 'О');
      _str = _str.replace(/FP/g, 'Т');
      _str = _str.replace(/DH/g, 'Д');
      _str = _str.replace(/ED/g, 'щ');
      _str = _str.replace(/AJ/g, '0');
      _str = _str.replace(/IC/g, 'Г');
      _str = _str.replace(/HA/g, 'У');
      _str = _str.replace(/OP/g, '2');
      _str = _str.replace(/MH/g, '-');
      _str = _str.replace(/CF/g, '(');
      _str = _str.replace(/HM/g, ')'); 

      return _str;
    });

    return replaced.join('');
  });

  return _arr;
};

const grouppedStrings = groupByNumber(value, 32);
const cuttedStrings = cutString(grouppedStrings);
const shftedStrings = shift(cuttedStrings);
const replacedText = replace(shftedStrings).join('');


console.log(replacedText);
